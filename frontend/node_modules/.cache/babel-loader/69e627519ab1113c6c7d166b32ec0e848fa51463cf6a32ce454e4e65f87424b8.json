{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst yaml = require('js-yaml');\n\n/**\n * Loads and parses the given file.\n *\n * @param  {string} filePath\n * Path to the file.\n *\n * @param  {string} optional\n * If `true`, returns an empty object if the file does not exist.\n *\n * @return {object}\n * The parsed file.\n */\nmodule.exports = function loadAndParse(filePath, optional) {\n  // Read the file.\n  let contents;\n  try {\n    contents = fs.readFileSync(filePath, 'utf-8');\n  } catch (error) {\n    /* istanbul ignore next */\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n    if (optional) {\n      return {};\n    }\n    throw new Error(`[yenv] Required file ${filePath} does not exist.`);\n  }\n  if (!contents) return {};\n  const yamlMarkup = contents.toString();\n  const parsed = yaml.load(yamlMarkup);\n  return parsed;\n};","map":{"version":3,"names":["fs","require","yaml","module","exports","loadAndParse","filePath","optional","contents","readFileSync","error","code","Error","yamlMarkup","toString","parsed","load"],"sources":["/home/roncalloj/Codes/new_project_react/frontend/node_modules/yenv/lib/loadAndParse.js"],"sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst yaml = require('js-yaml')\n\n/**\n * Loads and parses the given file.\n *\n * @param  {string} filePath\n * Path to the file.\n *\n * @param  {string} optional\n * If `true`, returns an empty object if the file does not exist.\n *\n * @return {object}\n * The parsed file.\n */\nmodule.exports = function loadAndParse(filePath, optional) {\n  // Read the file.\n  let contents\n  try {\n    contents = fs.readFileSync(filePath, 'utf-8')\n  } catch (error) {\n    /* istanbul ignore next */\n    if (error.code !== 'ENOENT') {\n      throw error\n    }\n\n    if (optional) {\n      return {}\n    }\n\n    throw new Error(`[yenv] Required file ${filePath} does not exist.`)\n  }\n\n  if (!contents) return {}\n  const yamlMarkup = contents.toString()\n  const parsed = yaml.load(yamlMarkup)\n  return parsed\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACzD;EACA,IAAIC,QAAQ;EACZ,IAAI;IACFA,QAAQ,GAAGR,EAAE,CAACS,YAAY,CAACH,QAAQ,EAAE,OAAO,CAAC;EAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC3B,MAAMD,KAAK;IACb;IAEA,IAAIH,QAAQ,EAAE;MACZ,OAAO,CAAC,CAAC;IACX;IAEA,MAAM,IAAIK,KAAK,CAAE,wBAAuBN,QAAS,kBAAiB,CAAC;EACrE;EAEA,IAAI,CAACE,QAAQ,EAAE,OAAO,CAAC,CAAC;EACxB,MAAMK,UAAU,GAAGL,QAAQ,CAACM,QAAQ,CAAC,CAAC;EACtC,MAAMC,MAAM,GAAGb,IAAI,CAACc,IAAI,CAACH,UAAU,CAAC;EACpC,OAAOE,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}