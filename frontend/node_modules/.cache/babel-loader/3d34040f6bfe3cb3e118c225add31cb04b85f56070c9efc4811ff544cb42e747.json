{"ast":null,"code":"/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n  return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false;\n}\nfunction cloneSpecificValue(val) {\n  if (val instanceof Buffer) {\n    var x = Buffer.alloc ? Buffer.alloc(val.length) : new Buffer(val.length);\n    val.copy(x);\n    return x;\n  } else if (val instanceof Date) {\n    return new Date(val.getTime());\n  } else if (val instanceof RegExp) {\n    return new RegExp(val);\n  } else {\n    throw new Error('Unexpected situation');\n  }\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n  var clone = [];\n  arr.forEach(function (item, index) {\n    if (typeof item === 'object' && item !== null) {\n      if (Array.isArray(item)) {\n        clone[index] = deepCloneArray(item);\n      } else if (isSpecificValue(item)) {\n        clone[index] = cloneSpecificValue(item);\n      } else {\n        clone[index] = deepExtend({}, item);\n      }\n    } else {\n      clone[index] = item;\n    }\n  });\n  return clone;\n}\nfunction safeGetProperty(object, property) {\n  return property === '__proto__' ? undefined : object[property];\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function /*obj_1, [obj_2], [obj_N]*/\n() {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n  var target = arguments[0];\n\n  // convert arguments to array and cut off target object\n  var args = Array.prototype.slice.call(arguments, 1);\n  var val, src, clone;\n  args.forEach(function (obj) {\n    // skip argument if isn't an object, is null, or is an array\n    if (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n      return;\n    }\n    Object.keys(obj).forEach(function (key) {\n      src = safeGetProperty(target, key); // source value\n      val = safeGetProperty(obj, key); // new value\n\n      // recursion prevention\n      if (val === target) {\n        return;\n\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return;\n\n        // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = deepCloneArray(val);\n        return;\n\n        // custom cloning and overwrite for specific objects\n      } else if (isSpecificValue(val)) {\n        target[key] = cloneSpecificValue(val);\n        return;\n\n        // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return;\n\n        // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};","map":{"version":3,"names":["isSpecificValue","val","Buffer","Date","RegExp","cloneSpecificValue","x","alloc","length","copy","getTime","Error","deepCloneArray","arr","clone","forEach","item","index","Array","isArray","deepExtend","safeGetProperty","object","property","undefined","module","exports","arguments","target","args","prototype","slice","call","src","obj","Object","keys","key"],"sources":["/home/roncalloj/Codes/new_project_react/node_modules/deep-extend/lib/deep-extend.js"],"sourcesContent":["/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = Buffer.alloc\n\t\t\t? Buffer.alloc(val.length)\n\t\t\t: new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\nfunction safeGetProperty(object, property) {\n\treturn property === '__proto__' ? undefined : object[property];\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = safeGetProperty(target, key); // source value\n\t\t\tval = safeGetProperty(obj, key); // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}