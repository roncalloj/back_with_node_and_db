{"ast":null,"code":"module.exports.keyblade = keyblade;\nconst UndefinedKeyError = module.exports.UndefinedKeyError = require('./UndefinedKeyError');\n\n/**\n * Protects the given object by wrapping it in a Proxy.\n *\n * @param  {object} obj\n * The object to wrap.\n *\n * @param  {(string) => string} opts.message\n * Optional function used to construct the error message.\n * Will get the key passed as the only argument.\n *\n * @param {string[]} ignore\n * Fields to ignore.\n *\n * @param {bool|Function(message: string, key: string)}\n * If specified, and is a function, is invoked before throwing.\n * If specified, and is truthy, `console.error` before throwing.\n *\n * @return {Proxy<object>}\n */\nfunction keyblade(obj, opts) {\n  opts = Object.assign({\n    message: _defaultMessage,\n    logBeforeThrow: true,\n    ignore: []\n  }, opts);\n  opts.ignore = opts.ignore && Array.isArray(opts.ignore) ? opts.ignore : [];\n  return new Proxy(obj, {\n    get(target, propKey, receiver) {\n      const useGetter = Reflect.has(target, propKey, receiver) || _isReserved(propKey, opts.ignore);\n      if (useGetter) {\n        return Reflect.get(target, propKey, receiver);\n      }\n\n      // Leave symbols alone.\n      if (typeof propKey === 'symbol') {\n        return Reflect.get(target, propKey, receiver);\n      }\n      const message = opts.message(propKey);\n      if (opts.logBeforeThrow) {\n        if (typeof opts.logBeforeThrow === 'function') {\n          opts.logBeforeThrow(message, propKey);\n        } else {\n          console.error(message);\n        }\n      }\n      throw new UndefinedKeyError(message);\n    }\n  });\n}\n\n/**\n * Default message creator.\n *\n * @param  {string} key\n * @return {string}\n */\nfunction _defaultMessage(key) {\n  key = String(key);\n  return `The key '${key}' does not exist on the object.`;\n}\nconst RESERVED_PROPS = ['toJSON', 'toString', 'inspect', '__esModule'];\n\n/**\n * Determines if the key name is a reserved key.\n *\n * @param  {string}  name\n * @param  {string[]}  additionalFieldsToIgnore\n * @return {Boolean}\n * @api private\n */\nfunction _isReserved(name, additionalFieldsToIgnore) {\n  return [].concat(RESERVED_PROPS, additionalFieldsToIgnore).includes(name);\n}","map":{"version":3,"names":["module","exports","keyblade","UndefinedKeyError","require","obj","opts","Object","assign","message","_defaultMessage","logBeforeThrow","ignore","Array","isArray","Proxy","get","target","propKey","receiver","useGetter","Reflect","has","_isReserved","console","error","key","String","RESERVED_PROPS","name","additionalFieldsToIgnore","concat","includes"],"sources":["/home/roncalloj/Codes/new_project_react/frontend/node_modules/keyblade/lib/keyblade.js"],"sourcesContent":["module.exports.keyblade = keyblade\n\nconst UndefinedKeyError = module.exports.UndefinedKeyError = require('./UndefinedKeyError')\n\n/**\n * Protects the given object by wrapping it in a Proxy.\n *\n * @param  {object} obj\n * The object to wrap.\n *\n * @param  {(string) => string} opts.message\n * Optional function used to construct the error message.\n * Will get the key passed as the only argument.\n *\n * @param {string[]} ignore\n * Fields to ignore.\n *\n * @param {bool|Function(message: string, key: string)}\n * If specified, and is a function, is invoked before throwing.\n * If specified, and is truthy, `console.error` before throwing.\n *\n * @return {Proxy<object>}\n */\nfunction keyblade (obj, opts) {\n  opts = Object.assign({\n    message: _defaultMessage,\n    logBeforeThrow: true,\n    ignore: []\n  }, opts)\n  opts.ignore = (opts.ignore && Array.isArray(opts.ignore)) ? opts.ignore : []\n\n  return new Proxy(obj, {\n    get (target, propKey, receiver) {\n      const useGetter = Reflect.has(target, propKey, receiver) || _isReserved(propKey, opts.ignore)\n      if (useGetter) {\n        return Reflect.get(target, propKey, receiver)\n      }\n\n      // Leave symbols alone.\n      if (typeof propKey === 'symbol') {\n        return Reflect.get(target, propKey, receiver)\n      }\n\n      const message = opts.message(propKey)\n      if (opts.logBeforeThrow) {\n        if (typeof opts.logBeforeThrow === 'function') {\n          opts.logBeforeThrow(message, propKey)\n        } else {\n          console.error(message)\n        }\n      }\n\n      throw new UndefinedKeyError(message)\n    }\n  })\n}\n\n/**\n * Default message creator.\n *\n * @param  {string} key\n * @return {string}\n */\nfunction _defaultMessage (key) {\n  key = String(key)\n\n  return `The key '${key}' does not exist on the object.`\n}\n\nconst RESERVED_PROPS = [\n  'toJSON',\n  'toString',\n  'inspect',\n  '__esModule'\n]\n\n/**\n * Determines if the key name is a reserved key.\n *\n * @param  {string}  name\n * @param  {string[]}  additionalFieldsToIgnore\n * @return {Boolean}\n * @api private\n */\nfunction _isReserved (name, additionalFieldsToIgnore) {\n  return [].concat(RESERVED_PROPS, additionalFieldsToIgnore).includes(name)\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,CAACC,QAAQ,GAAGA,QAAQ;AAElC,MAAMC,iBAAiB,GAAGH,MAAM,CAACC,OAAO,CAACE,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,QAAQA,CAAEG,GAAG,EAAEC,IAAI,EAAE;EAC5BA,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC;IACnBC,OAAO,EAAEC,eAAe;IACxBC,cAAc,EAAE,IAAI;IACpBC,MAAM,EAAE;EACV,CAAC,EAAEN,IAAI,CAAC;EACRA,IAAI,CAACM,MAAM,GAAIN,IAAI,CAACM,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACR,IAAI,CAACM,MAAM,CAAC,GAAIN,IAAI,CAACM,MAAM,GAAG,EAAE;EAE5E,OAAO,IAAIG,KAAK,CAACV,GAAG,EAAE;IACpBW,GAAGA,CAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;MAC9B,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACL,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,IAAII,WAAW,CAACL,OAAO,EAAEZ,IAAI,CAACM,MAAM,CAAC;MAC7F,IAAIQ,SAAS,EAAE;QACb,OAAOC,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAC/C;;MAEA;MACA,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAOG,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAC/C;MAEA,MAAMV,OAAO,GAAGH,IAAI,CAACG,OAAO,CAACS,OAAO,CAAC;MACrC,IAAIZ,IAAI,CAACK,cAAc,EAAE;QACvB,IAAI,OAAOL,IAAI,CAACK,cAAc,KAAK,UAAU,EAAE;UAC7CL,IAAI,CAACK,cAAc,CAACF,OAAO,EAAES,OAAO,CAAC;QACvC,CAAC,MAAM;UACLM,OAAO,CAACC,KAAK,CAAChB,OAAO,CAAC;QACxB;MACF;MAEA,MAAM,IAAIN,iBAAiB,CAACM,OAAO,CAAC;IACtC;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAEgB,GAAG,EAAE;EAC7BA,GAAG,GAAGC,MAAM,CAACD,GAAG,CAAC;EAEjB,OAAQ,YAAWA,GAAI,iCAAgC;AACzD;AAEA,MAAME,cAAc,GAAG,CACrB,QAAQ,EACR,UAAU,EACV,SAAS,EACT,YAAY,CACb;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,WAAWA,CAAEM,IAAI,EAAEC,wBAAwB,EAAE;EACpD,OAAO,EAAE,CAACC,MAAM,CAACH,cAAc,EAAEE,wBAAwB,CAAC,CAACE,QAAQ,CAACH,IAAI,CAAC;AAC3E"},"metadata":{},"sourceType":"script","externalDependencies":[]}