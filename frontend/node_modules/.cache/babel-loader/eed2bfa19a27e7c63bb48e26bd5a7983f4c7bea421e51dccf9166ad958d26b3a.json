{"ast":null,"code":"const getState = _ref => {\n  let {\n    getStore,\n    getActions,\n    setStore\n  } = _ref;\n  return {\n    store: {\n      message: null,\n      token: ''\n    },\n    actions: {\n      fetchGenerico: async (endpoint, data, metodo) => {\n        let url = process.env.BACKEND_URL;\n        let response = await fetch(url + endpoint, {\n          method: metodo,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        return response;\n      },\n      login: async (endpoint, data, metodo) => {\n        let url = process.env.BACKEND_URL;\n        let response = await fetch(url + endpoint, {\n          method: metodo,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        let responseJson = await response.json();\n        console.log(responseJson.token);\n        let token = responseJson.token;\n        setStore({\n          token: token\n        }); //reseteo todo el store\n        return response;\n      },\n      fetchProtegido: async function (endpoint) {\n        let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        let metodo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n        const store = getStore();\n        let url = process.env.BACKEND_URL;\n        let encabezado = {\n          method: metodo,\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + store.token\n          },\n          body: data ? JSON.stringify(data) : undefined\n        };\n        let response = await fetch(url + endpoint, encabezado);\n        return response;\n      }\n    }\n  };\n};\nexport default getState;","map":{"version":3,"names":["getState","_ref","getStore","getActions","setStore","store","message","token","actions","fetchGenerico","endpoint","data","metodo","url","process","env","BACKEND_URL","response","fetch","method","headers","body","JSON","stringify","login","responseJson","json","console","log","fetchProtegido","arguments","length","undefined","encabezado","Authorization"],"sources":["/home/roncalloj/Codes/new_project_react/frontend/src/store/flux.jsx"],"sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tmessage: null,\n\t\t\ttoken: '',\n\t\t},\n\t\tactions: {\n\t\t\tfetchGenerico: async (endpoint, data, metodo) => {\n\t\t\t\tlet url = process.env.BACKEND_URL;\n\t\t\t\tlet response = await fetch(url + endpoint, {\n\t\t\t\t\tmethod: metodo,\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t},\n\t\t\tlogin: async (endpoint, data, metodo) => {\n\t\t\t\tlet url = process.env.BACKEND_URL;\n\t\t\t\tlet response = await fetch(url + endpoint, {\n\t\t\t\t\tmethod: metodo,\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t});\n\t\t\t\tlet responseJson = await response.json();\n\t\t\t\tconsole.log(responseJson.token);\n\t\t\t\tlet token = responseJson.token;\n\t\t\t\tsetStore({ token: token }); //reseteo todo el store\n\t\t\t\treturn response;\n\t\t\t},\n\n\t\t\tfetchProtegido: async (endpoint, data = undefined, metodo = 'GET') => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet url = process.env.BACKEND_URL;\n\t\t\t\tlet encabezado = {\n\t\t\t\t\tmethod: metodo,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAuthorization: 'Bearer ' + store.token,\n\t\t\t\t\t},\n\t\t\t\t\tbody: data ? JSON.stringify(data) : undefined,\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(url + endpoint, encabezado);\n\t\t\t\treturn response;\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport default getState;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,QAAQ;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACnD,OAAO;IACNI,KAAK,EAAE;MACNC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACR,CAAC;IACDC,OAAO,EAAE;MACRC,aAAa,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,KAAK;QAChD,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,WAAW;QACjC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAGH,QAAQ,EAAE;UAC1CS,MAAM,EAAEP,MAAM;UACdQ,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;QAC1B,CAAC,CAAC;QACF,OAAOM,QAAQ;MAChB,CAAC;MACDO,KAAK,EAAE,MAAAA,CAAOd,QAAQ,EAAEC,IAAI,EAAEC,MAAM,KAAK;QACxC,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,WAAW;QACjC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAGH,QAAQ,EAAE;UAC1CS,MAAM,EAAEP,MAAM;UACdQ,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;QAC1B,CAAC,CAAC;QACF,IAAIc,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACxCC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAClB,KAAK,CAAC;QAC/B,IAAIA,KAAK,GAAGkB,YAAY,CAAClB,KAAK;QAC9BH,QAAQ,CAAC;UAAEG,KAAK,EAAEA;QAAM,CAAC,CAAC,CAAC,CAAC;QAC5B,OAAOU,QAAQ;MAChB,CAAC;MAEDY,cAAc,EAAE,eAAAA,CAAOnB,QAAQ,EAAuC;QAAA,IAArCC,IAAI,GAAAmB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;QAAA,IAAEpB,MAAM,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;QAChE,MAAMzB,KAAK,GAAGH,QAAQ,CAAC,CAAC;QACxB,IAAIW,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,WAAW;QACjC,IAAIiB,UAAU,GAAG;UAChBd,MAAM,EAAEP,MAAM;UACdQ,OAAO,EAAE;YACR,cAAc,EAAE,kBAAkB;YAClCc,aAAa,EAAE,SAAS,GAAG7B,KAAK,CAACE;UAClC,CAAC;UACDc,IAAI,EAAEV,IAAI,GAAGW,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,GAAGqB;QACrC,CAAC;QAED,IAAIf,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAGH,QAAQ,EAAEuB,UAAU,CAAC;QACtD,OAAOhB,QAAQ;MAChB;IACD;EACD,CAAC;AACF,CAAC;AAED,eAAejB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}